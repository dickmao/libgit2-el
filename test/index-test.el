(ert-deftest index ()
  (with-temp-dir path
    (init)
    (commit-change "file1" "content")
    (commit-change "file2" "more content")
    (write "file2" "changes")
    (write "file3" "more changes")
    (write "file4" "even more changes")
    (add "file2" "file3")
    (let* ((repo (libgit2-repository-open path))
           (index (libgit2-repository-index repo)))
      (should (= 3 (libgit2-index-entrycount index)))
      (let* ((i1 (libgit2-index-get-byindex index 0))
             (i2 (libgit2-index-get-byindex index 1))
             (i3 (libgit2-index-get-byindex index 2))
             (head (libgit2-reference-name-to-id repo "HEAD"))
             (commit (libgit2-commit-lookup repo head))
             (tree (libgit2-commit-tree commit)))
        (should (string= "file1" (libgit2-index-entry-path i1)))
        (should (string= "file2" (libgit2-index-entry-path i2)))
        (should (string= "file3" (libgit2-index-entry-path i3)))
        (should-not (libgit2-index-entry-stage i1))
        (should-not (libgit2-index-entry-stage i2))
        (should-not (libgit2-index-entry-stage i3))
        (should (string= (libgit2-index-entry-id i1)
                         (caddr (libgit2-tree-entry-byname tree "file1"))))
        (should-not (string= (libgit2-index-entry-id i2)
                             (caddr (libgit2-tree-entry-byname tree "file2"))))))))

(ert-deftest index-conflicts ()
  (with-temp-dir path
    (init)
    (commit-change "file" "alpha")
    (create-branch "A")
    (commit-change "file" "beta")
    (checkout "master")
    (create-branch "B")
    (commit-change "file" "gamma")
    (run-fail "git" "merge" "A")
    (let* ((repo (libgit2-repository-open path))
           (index (libgit2-repository-index repo)))
      (should (= 3 (libgit2-index-entrycount index)))
      (let ((i1 (libgit2-index-get-byindex index 0))
            (i2 (libgit2-index-get-byindex index 1))
            (i3 (libgit2-index-get-byindex index 2)))
        (should (string= "file" (libgit2-index-entry-path i1)))
        (should (string= "file" (libgit2-index-entry-path i2)))
        (should (string= "file" (libgit2-index-entry-path i3)))
        (should (eq 'base (libgit2-index-entry-stage i1)))
        (should (eq 'ours (libgit2-index-entry-stage i2)))
        (should (eq 'theirs (libgit2-index-entry-stage i3)))
        (should (eq 'base (libgit2-index-entry-stage (libgit2-index-get-bypath index "file" 'base))))
        (should (eq 'ours (libgit2-index-entry-stage (libgit2-index-get-bypath index "file" 'ours))))
        (should (eq 'theirs (libgit2-index-entry-stage (libgit2-index-get-bypath index "file" 'theirs))))
        (should-not (libgit2-index-get-bypath index "file"))
        (let ((conflicts (libgit2-index-conflict-get index "file")))
          (should (eq 'base (libgit2-index-entry-stage (car conflicts))))
          (should (eq 'ours (libgit2-index-entry-stage (cadr conflicts))))
          (should (eq 'theirs (libgit2-index-entry-stage (caddr conflicts)))))))))

(ert-deftest index-add-bypath ()
  (with-temp-dir path
    (init)
    (write "a" "abcdef")
    (write "b" "ghijkl")
    (write "c" "mnopqr")
    (let* ((repo (libgit2-repository-open path))
           (index (libgit2-repository-index repo)))
      (should (= 0 (libgit2-index-entrycount index)))
      (should-not (string-match-p "new file" (run "git" "status")))

      (libgit2-index-add-bypath index "a")
      (should (= 1 (libgit2-index-entrycount index)))
      (should-not (string-match-p "new file" (run "git" "status")))
      (libgit2-index-write index)
      (should (string-match-p "new file:\\s-+a$" (run "git" "status")))
      (should-not (string-match-p "new file:\\s-+b$" (run "git" "status")))

      (libgit2-index-add-bypath index "b")
      (should (= 2 (libgit2-index-entrycount index)))
      (should-not (string-match-p "new file:\\s-+b$" (run "git" "status")))
      (libgit2-index-write index)
      (should (string-match-p "new file:\\s-+b$" (run "git" "status")))
      (should-not (string-match-p "new file:\\s-+c$" (run "git" "status")))

      (libgit2-index-clear index)
      (should (= 0 (libgit2-index-entrycount index)))
      (should (string-match-p "new file:\\s-+b$" (run "git" "status")))
      (libgit2-index-write index)
      (should-not (string-match-p "new file" (run "git" "status"))))))

(ert-deftest index-add-all ()
  (with-temp-dir path
    (init)
    (write "a.txt" "abcdef")
    (write "b.txt" "ghijkl")
    (write "subdir/c.txt" "mnopqr")
    (write "subdir/d" "stuvwx")
    (let* ((repo (libgit2-repository-open path))
           (index (libgit2-repository-index repo)))
      (should (= 0 (libgit2-index-entrycount index)))
      (should-not (string-match-p "new file" (run "git" "status")))

      (libgit2-index-add-all index '("*.txt"))
      (should (= 3 (libgit2-index-entrycount index)))
      (libgit2-index-clear index)

      ;; TODO: Maybe I don't understand what disable-pathspec-match should do?
      ;; (libgit2-index-add-all index '("*.txt") '(disable-pathspec-match))
      ;; (should (= 0 (libgit2-index-entrycount index)))
      ;; (libgit2-index-clear index)

      (libgit2-index-add-all index)
      (should (= 4 (libgit2-index-entrycount index)))
      (libgit2-index-clear index)

      (libgit2-index-add-all index '("z"))
      (should (= 0 (libgit2-index-entrycount index)))
      (libgit2-index-clear index)

      (libgit2-index-add-all index '("d"))
      (should (= 0 (libgit2-index-entrycount index)))
      (libgit2-index-clear index))))

(ert-deftest index-add-all-ignore ()
  (with-temp-dir path
    (init)
    (write "a.txt" "abcdef")
    (write "b.txt" "ghijkl")
    (write "subdir/c.txt" "mnopqr")
    (write "subdir/d" "stuvwx")
    (write ".git/info/exclude" "/a.txt\n/subdir/d")
    (let* ((repo (libgit2-repository-open path))
           (index (libgit2-repository-index repo)))
      (should (= 0 (libgit2-index-entrycount index)))
      (should-not (string-match-p "new file" (run "git" "status")))

      (libgit2-index-add-all index '("*.txt"))
      (should (= 2 (libgit2-index-entrycount index)))
      (libgit2-index-clear index)

      (libgit2-index-add-all index '("*.txt") '(force))
      (should (= 3 (libgit2-index-entrycount index)))
      (libgit2-index-clear index)

      (libgit2-index-add-all index)
      (should (= 2 (libgit2-index-entrycount index)))
      (libgit2-index-clear index)

      (libgit2-index-add-all index nil '(force))
      (should (= 4 (libgit2-index-entrycount index))))))

(ert-deftest index-add-all-callback ()
  (with-temp-dir path
    (init)
    (write "a.txt" "abcdef")
    (write "b.txt" "ghijkl")
    (write "subdir/c.txt" "mnopqr")
    (write "subdir/d" "stuvwx")
    (let* ((repo (libgit2-repository-open path))
           (index (libgit2-repository-index repo))
           data)
      (should (= 0 (libgit2-index-entrycount index)))
      (should-not (string-match-p "new file" (run "git" "status")))

      (libgit2-index-add-all index nil nil (lambda (&rest args) (push args data)))
      (setq data (sort data (lambda (a b) (string< (car a) (car b)))))
      (should (equal data
                     '(("a.txt" nil)
                       ("b.txt" nil)
                       ("subdir/c.txt" nil)
                       ("subdir/d" nil))))
      (libgit2-index-clear index)
      (setq data nil)

      (libgit2-index-add-all index '("*.txt") nil (lambda (&rest args) (push args data)))
      (setq data (sort data (lambda (a b) (string< (car a) (car b)))))
      (should (equal data
                     '(("a.txt" "*.txt")
                       ("b.txt" "*.txt")
                       ("subdir/c.txt" "*.txt")))))))

(ert-deftest index-read ()
  (with-temp-dir path
    (init)
    (write "a" "abcdef")
    (write "b" "ghijkl")
    (write "c" "mnopqr")
    (let* ((repo (libgit2-repository-open path))
           (index (libgit2-repository-index repo)))
      (should (= 0 (libgit2-index-entrycount index)))
      (run "git" "add" "a")
      (should (= 0 (libgit2-index-entrycount index)))
      (libgit2-index-read index)
      (should (= 1 (libgit2-index-entrycount index)))
      (run "git" "add" "c")
      (should (= 1 (libgit2-index-entrycount index)))
      (libgit2-index-read index)
      (should (= 2 (libgit2-index-entrycount index))))))

(ert-deftest index-write-tree ()
  (with-temp-dir path
    (init)
    (write "a" "abcdef")
    (write "b" "ghijkl")
    (write "subdir/c" "mnopqr")
    (let* ((repo (libgit2-repository-open path))
           (index (libgit2-repository-index repo))
           tree)
      (libgit2-index-add-bypath index "a")
      (libgit2-index-add-bypath index "b")
      (libgit2-index-add-bypath index "subdir/c")
      (setq tree (libgit2-tree-lookup repo (libgit2-index-write-tree index)))
      (should (= 3 (libgit2-tree-entrycount tree)))
      (should (libgit2-tree-entry-bypath tree "a"))
      (should (libgit2-tree-entry-bypath tree "b"))
      (should (libgit2-tree-entry-bypath tree "subdir/c"))
      (should-error (libgit2-tree-entry-bypath tree "notfound") :type 'giterr-tree))))
